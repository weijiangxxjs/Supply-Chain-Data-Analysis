明细表列顺序通用 = 
VAR Current_Indicator = [指标]
VAR IndicatorType = 
    SWITCH(
        TRUE(),
        CONTAINSSTRING(Current_Indicator, "Share"), "Share",
        CONTAINSSTRING(Current_Indicator, "实际产值"), "实际产值",
        CONTAINSSTRING(Current_Indicator, "总数"), "总数",
        CONTAINSSTRING(Current_Indicator, "理论产值"), "理论产值",
        CONTAINSSTRING(Current_Indicator, "Gap"), "Gap",
        ""
    )
VAR YearMonthPart = 
    // 尝试提取前6位字符并判断是否为数字
    VAR FirstSixChars = LEFT(Current_Indicator, 6)
    VAR IsNumberSix = NOT(ISERROR(VALUE(FirstSixChars)))
    VAR ExtractedPartSix = IF(IsNumberSix, FirstSixChars, "")
    // 若前6位不是数字，尝试提取前4位字符并判断是否为数字
    VAR FirstFourChars = LEFT(Current_Indicator, 4)
    VAR IsNumberFour = NOT(ISERROR(VALUE(FirstFourChars)))
    VAR ExtractedPartFour = IF(IsNumberFour, FirstFourChars, "")
    RETURN
    IF(ExtractedPartSix <> "", ExtractedPartSix, ExtractedPartFour)
VAR NewIndicator = 
    SWITCH(
        TRUE(),
		IndicatorType = "Share", "1 - " & SUBSTITUTE(Current_Indicator,"Share"," Share"),//在这里更改你想要的列名
        IndicatorType = "实际产值", "5 - " & SUBSTITUTE(Current_Indicator,"实际产值"," TTL shipment"),//在这里更改你想要的列名
        IndicatorType = "总数", "6 - " & SUBSTITUTE(Current_Indicator,"总数","我的总数"),//在这里更改你想要的列名
        IndicatorType = "理论产值", "7 - " & SUBSTITUTE(Current_Indicator,"理论产值"," Target QTY"),//在这里更改你想要的列名
		IndicatorType = "Gap", "8 - " & SUBSTITUTE(Current_Indicator,"Gap"," QTY Gap"),//在这里更改你想要的列名
        ISNUMBER(VALUE(YearMonthPart)), "2 - " & YearMonthPart,
        Current_Indicator
    )
RETURN
[季度] & " - " & NewIndicator


显示明细列表列标题 = 
VAR Full_Name = [明细表列顺序通用]
RETURN
IF(
    NOT(ISBLANK(Full_Name)),
    VAR HyphenPosition = FIND("-", Full_Name, 1, 0)
    VAR SecondHyphenPosition = FIND("-", Full_Name, HyphenPosition + 1, 0)
    VAR AfterSecondHyphen = RIGHT(Full_Name, LEN(Full_Name) - SecondHyphenPosition)
    VAR TrimmedName = TRIM(AfterSecondHyphen)
    RETURN
    TrimmedName,
    BLANK()
)


格式化明细表显示格式 = 
VAR Current_Indicator = SELECTEDVALUE('明细'[指标])
VAR Current_KB_Spec = SELECTEDVALUE('明细'[KB Spec])
VAR Current_ODM = SELECTEDVALUE('明细'[ODM])
VAR Current_Supplier = SELECTEDVALUE('明细'[Suppliers])
VAR Is_Total_Row = ISFILTERED('明细'[KB Spec]) = FALSE()  -- 判断是否为总计行
RETURN
IF(
    CONTAINSSTRING(Current_Indicator, "总数"),
    IF(
        Is_Total_Row,
        -- 总计行：累计所有 KB Spec 级别已显示的数
        FORMAT(
            SUMX(
                VALUES('明细'[KB Spec]),
                CALCULATE(
                    SUMX(
                        SUMMARIZE(
                            FILTER('明细', CONTAINSSTRING('明细'[指标], "总数")),
                            '明细'[ODM],
                            "ODM_Value", 
                            CALCULATE(
                                SUM('明细'[数据值]),
                                TOPN(1, VALUES('明细'[Suppliers]), '明细'[Suppliers], ASC)
                            )
                        ),
                        [ODM_Value]
                    )
                )
            ),
            "#,##0"  -- 保留科学计数法，去掉小数点
        ),
        IF(
            NOT(ISBLANK(Current_KB_Spec)) && ISBLANK(Current_ODM) && ISBLANK(Current_Supplier),
            -- KB Spec 级别：汇总 ODM 级别已显示的值
            FORMAT(
                CALCULATE(
                    SUMX(
                        SUMMARIZE(
                            FILTER('明细', CONTAINSSTRING('明细'[指标], "总数")),
                            '明细'[ODM],
                            "ODM_Value", 
                            CALCULATE(
                                SUM('明细'[数据值]),
                                TOPN(1, VALUES('明细'[Suppliers]), '明细'[Suppliers], ASC)
                            )
                        ),
                        [ODM_Value]
                    ),
                    FILTER('明细', '明细'[KB Spec] = Current_KB_Spec)
                ),
                "#,##0"  -- 保留科学计数法，去掉小数点
            ),
            IF(
                NOT(ISBLANK(Current_ODM)) && ISBLANK(Current_Supplier),
                -- ODM 级别：显示任意一个 Suppliers 的值
                FORMAT(
                    CALCULATE(
                        SUM('明细'[数据值]),
                        FILTER(
                            '明细',
                            CONTAINSSTRING('明细'[指标], "总数") 
                            && '明细'[ODM] = Current_ODM
                        ),
                        TOPN(1, VALUES('明细'[Suppliers]), '明细'[Suppliers], ASC)
                    ),
                    "#,##0"  -- 保留科学计数法，去掉小数点
                ),
                -- 其他情况：保持原有逻辑
                FORMAT(SUM('明细'[数据值]), "#,##0")  -- 保留科学计数法，去掉小数点
            )
        )
    ),
    -- 非“总数”列的原有逻辑
    IF(
        CONTAINSSTRING(Current_Indicator, "Share"),
        IF(
            Is_Total_Row,
            -- 总计行：显示为空
            BLANK(),
            -- 非总计行：原有逻辑
            VAR Share_Value = 
                CALCULATE(
                    SUM('明细'[数据值]),
                    FILTER('明细', CONTAINSSTRING([指标], "Share"))
                )
            RETURN
            IF(
                NOT(ISBLANK(Share_Value)),
                FORMAT(Share_Value, "0.00%"),
                BLANK()
            )
        ),
        -- 其他列的格式化逻辑
        VAR Other_Value = SUM('明细'[数据值])
        RETURN
        IF(
            NOT(ISBLANK(Other_Value)),
            FORMAT(Other_Value, "#,##0"),
            BLANK()
        )
    )
)


汇总表列顺序通用 = 
VAR Current_Indicator = [指标]
VAR IndicatorType = 
    SWITCH(
        TRUE(),
        CONTAINSSTRING(Current_Indicator, "Share"), "Share",
        CONTAINSSTRING(Current_Indicator, "实际总值"), "实际总值",
        CONTAINSSTRING(Current_Indicator, "理论总值"), "理论总值",
        CONTAINSSTRING(Current_Indicator, "实际生产比例"), "实际生产比例",
        CONTAINSSTRING(Current_Indicator, "Gap_数量"), "Gap_数量",
        CONTAINSSTRING(Current_Indicator, "Gap_共享"), "Gap_共享",
        ""
    )
VAR YearMonthPart = 
    // 尝试提取前6位字符并判断是否为数字
    VAR FirstSixChars = LEFT(Current_Indicator, 6)
    VAR IsNumberSix = NOT(ISERROR(VALUE(FirstSixChars)))
    VAR ExtractedPartSix = IF(IsNumberSix, FirstSixChars, "")
    // 若前6位不是数字，尝试提取前4位字符并判断是否为数字
    VAR FirstFourChars = LEFT(Current_Indicator, 4)
    VAR IsNumberFour = NOT(ISERROR(VALUE(FirstFourChars)))
    VAR ExtractedPartFour = IF(IsNumberFour, FirstFourChars, "")
    RETURN
    IF(ExtractedPartSix <> "", ExtractedPartSix, ExtractedPartFour)
VAR NewIndicator = 
    SWITCH(
        TRUE(),
        IndicatorType = "Share", "1 - " & SUBSTITUTE(Current_Indicator,"Share"," Share"),
        IndicatorType = "实际总值", "5 - " & SUBSTITUTE(Current_Indicator,"实际总值"," TTL shipment"),
        IndicatorType = "理论总值", "6 - " & SUBSTITUTE(Current_Indicator,"理论总值"," Target QTY"),
        IndicatorType = "实际生产比例", "8 - " & SUBSTITUTE(Current_Indicator,"实际生产比例"," Actual Share"),
        IndicatorType = "Gap_数量", "7 - " & SUBSTITUTE(Current_Indicator,"Gap_数量"," QTY Gap"),
        IndicatorType = "Gap_共享", "9 - " & SUBSTITUTE(Current_Indicator,"Gap_共享"," Share Gap"),
        ISNUMBER(VALUE(YearMonthPart)), "2 - " & YearMonthPart,
        Current_Indicator
    )
// 先按季度排序，再按 NewIndicator 排序
RETURN
[季度] & " - " & NewIndicator


显示汇总表列标题 = 
VAR Full_Name = [汇总表列顺序通用]
RETURN
IF(
    NOT(ISBLANK(Full_Name)),
    VAR HyphenPosition = FIND("-", Full_Name, 1, 0)
    VAR SecondHyphenPosition = FIND("-", Full_Name, HyphenPosition + 1, 0)
    VAR AfterSecondHyphen = RIGHT(Full_Name, LEN(Full_Name) - SecondHyphenPosition)
    VAR TrimmedName = TRIM(AfterSecondHyphen)
    RETURN
    TrimmedName,
    BLANK()
)


格式化汇总表显示格式 = 
VAR Current_Indicator = SELECTEDVALUE('汇总'[指标])
RETURN
SWITCH(
    TRUE(),
    CONTAINSSTRING(Current_Indicator, "Share") || CONTAINSSTRING(Current_Indicator, "实际生产比例") || CONTAINSSTRING(Current_Indicator, "Gap_共享"), 
        VAR Share_Value = 
            CALCULATE(
                SUM('汇总'[数据值]),
                FILTER('汇总', CONTAINSSTRING([指标], "Share") || CONTAINSSTRING([指标], "实际生产比例") || CONTAINSSTRING([指标], "Gap_共享"))
            )
        RETURN
        IF(
            NOT(ISBLANK(Share_Value)),
            FORMAT(Share_Value, "0.00%"),
            BLANK()
        ),
    -- 动态处理其他列，添加格式化逻辑
    TRUE,
        VAR Other_Value = SUM('汇总'[数据值])
        RETURN
        IF(
            NOT(ISBLANK(Other_Value)),
            FORMAT(Other_Value, "#,##0"),
            BLANK()
        )
)